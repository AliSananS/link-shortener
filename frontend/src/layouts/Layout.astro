---
import Nav from '@/components/nav';
import { Toaster } from '@/components/ui/sonner';
import '@/styles/global.css';
import { ThemeSwitch } from 'astro-color-scheme';
---

<script is:inline>
	const getThemePreference = () => {
		if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
			return localStorage.getItem('theme');
		}
		return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
	};
	const isDark = getThemePreference() === 'dark';
	document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

	if (typeof localStorage !== 'undefined') {
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains('dark');
			localStorage.setItem('theme', isDark ? 'dark' : 'light');
		});
		observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
	}
</script>

<script>
	import { isLoggedIn, isCheckingSession } from '@/store';
	isCheckingSession.set(true);

	// Check initial login state
	fetch('/api/me')
		.then((res) => res.json())
		.then((data) => {
			isCheckingSession.set(false);
			if (data.success) {
				isLoggedIn.set(true);
			} else {
				isLoggedIn.set(false);
			}
		})
		.catch(() => {
			isCheckingSession.set(false);
			isLoggedIn.set(false);
		});
</script>

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Link Shortener</title>
	</head>
	<body class="flex flex-col items-center">
		<Nav client:load />
		<slot />
		<Toaster client:load />
	</body>
</html>
